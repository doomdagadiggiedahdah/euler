# take in a string and find biggest prod among consecutive nums
# positions are the biggest thing, only compute
# can index a num? if not, str and back. there must be an easier way though.
# actually, gonna come back to this one. I know that I can do it, but there's a test I gotta ace.
# (10:18:04) -- (10:37:54) 

# I can test by printing out the final section of 4 / 13
# cool, getting all the values, now I need to take each chunk, compute their values.
# given a single chunk, I would like to take each num within it and multiply them together.
# there's prob a way to facilitate that easily.


big_num = 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450

adj_dig = 13
def getit():
    length = len(str(big_num)) - adj_dig + 1
    start = 0
    mx = 0
    answer = 0

    for i in range(length):
        total = 1
        chunk = str(big_num)[start:start+adj_dig]

        for num in chunk:
            total = total * int(num)
            if total > mx:
                mx = total
                answer = chunk
        start += 1

    return print(mx)
getit()
